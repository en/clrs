pub fn increment(a: &mut [u8]) {
    let mut i: usize = 0;
    while i < a.len() && a[i] == 1 {
        a[i] = 0;
        i += 1;
    }
    if i < a.len() {
        a[i] = 1
    }
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn test_increment() {
        let mut a: [u8; 8] = [0, 0, 0, 0, 0, 0, 0, 0];
        let want: [[u8; 8]; 16] = [[1, 0, 0, 0, 0, 0, 0, 0],
                                   [0, 1, 0, 0, 0, 0, 0, 0],
                                   [1, 1, 0, 0, 0, 0, 0, 0],
                                   [0, 0, 1, 0, 0, 0, 0, 0],
                                   [1, 0, 1, 0, 0, 0, 0, 0],
                                   [0, 1, 1, 0, 0, 0, 0, 0],
                                   [1, 1, 1, 0, 0, 0, 0, 0],
                                   [0, 0, 0, 1, 0, 0, 0, 0],
                                   [1, 0, 0, 1, 0, 0, 0, 0],
                                   [0, 1, 0, 1, 0, 0, 0, 0],
                                   [1, 1, 0, 1, 0, 0, 0, 0],
                                   [0, 0, 1, 1, 0, 0, 0, 0],
                                   [1, 0, 1, 1, 0, 0, 0, 0],
                                   [0, 1, 1, 1, 0, 0, 0, 0],
                                   [1, 1, 1, 1, 0, 0, 0, 0],
                                   [0, 0, 0, 0, 1, 0, 0, 0]];
        for i in 0..want.len() {
            increment(&mut a[..]);
            assert_eq!(want[i], a);
        }
    }
}
